[tool.poetry]
name = "core"
version = "0.1.0"
description = ""
authors = []

[tool.poetry.dependencies]
python = "^3.11"
dependency-injector = "^4.41.0"
async-timeout = "^4.0.3"
redis = "^5.0.3"
langchain = "^0.1.12"
langchain-openai = "^0.0.8"

[tool.poetry.group.dev.dependencies]
pytest = "^8.1.1"
mypy = "^1.9.0"
ruff = "^0.3.3"
coverage = "^7.4.4"
pre-commit = "^3.6.2"


[build-system]
requires = ["poetry"]
build-backend = "poetry.masonry.api"

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
line_length = 88

[tool.mypy]
strict = true
exclude = [".venv", "alembic"]

[tool.ruff]
target-version = "py311"

[tool.ruff.lint]
select = [
  "E",  # pycodestyle errors
  "W",  # pycodestyle warnings
  "F",  # pyflakes
  "I",  # isort
  "B",  # flake8-bugbear
  "C4",  # flake8-comprehensions
  "UP",  # pyupgrade
]
ignore = [
  "E501",  # line too long, handled by black
  "B008",  # do not perform function calls in argument defaults
  "W191",  # indentation contains tabs
  "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
